C51 COMPILER V9.54   GP_SUB                                                                06/03/2019 10:28:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE GP_SUB
OBJECT MODULE PLACED IN .\output\GP_SUB.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\GP_SUB.C ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\output\GP_SUB.lst) TABS(2) OBJECT(.\output\GP_SUB.obj)

line level    source

   1          
   2          
   3          
   4          #ifndef  OS_MASTER_FILE
   5          #define  OS_GLOBALS
   6          #include "includes.h"
   7          #endif
   8          
   9          
  10          
  11          
  12          #ifdef _HEX2DEC
              INT8U    DEC[4];              //dec2hex use.
              #endif
  15          
  16          #ifdef _DEC2HEX
              INT8U    HEX;              //hex2dec use.
              #endif
  19          
  20          
  21          
  22          /********************************************************************//**
  23           * @brief:      hex to asc Function subprogram
  24           *              
  25           *
  26           * @param[in]:  NONE
  27           *               
  28           * @return:     NONE
  29           *********************************************************************/
  30          #ifdef _HEX_TO_ASC_
  31          INT8U HexToAsc(INT8U aHex)
  32          {
  33   1        if ((aHex>=0) && (aHex <= 9))
  34   1          aHex += 0x30;
  35   1        else if ((aHex >= 10) && (aHex <= 15))
  36   1          aHex += 0x37;
  37   1        else
  38   1          aHex = 0xff;
  39   1        
  40   1        return aHex;
  41   1      }
  42          #endif
  43          
  44          /********************************************************************//**
  45           * @brief:      asc to hex Function subprogram
  46           *              
  47           *
  48           * @param[in]:  NONE
  49           *               
  50           * @return:     NONE
  51           *********************************************************************/
  52          #ifdef _ASC_TO_HEX_
              INT8U AscToHex(INT8U aChar)
              {
C51 COMPILER V9.54   GP_SUB                                                                06/03/2019 10:28:36 PAGE 2   

                if ((aChar >= 0x30) && (aChar <= 0x39))
                  aChar -= 0x30;
                else if ((aChar >= 0x41) && (aChar <= 0x46))
                  aChar -= 0x37;
                else if ((aChar >= 0x61) && (aChar <= 0x66))
                  aChar -= 0x57;
                else
                  aChar = 0xff;
                
                return aChar;
              }
              #endif
  67          
  68          /********************************************************************//**
  69           * @brief:      delay US Function subprogram
  70           *              
  71           *
  72           * @param[in]:  NONE
  73           *               
  74           * @return:     NONE
  75           *********************************************************************/
  76          #ifdef _DELAY_US
  77          
  78          void DelayUs(INT16U count)
  79          {
  80   1        //INT8U bak = count;
  81   1        
  82   1        while(count--);
  83   1        //while(bak--);
  84   1      }
  85          
  86          #endif
  87          
  88          /********************************************************************//**
  89           * @brief:      DELAY MS
  90                           
  91           * @param[in]:    NONE
  92           *               
  93           * @return:     NONE
  94           *********************************************************************/
  95          #ifdef _DELAY_MS
  96          
  97          void DelayMs(INT16U t)    //用示波器调过，（8MHZ）
  98          {
  99   1        /*
 100   1        //8M
 101   1        INT8U i,j;
 102   1        for(; t > 0; t--)
 103   1        for(j = 21; j > 0; j--)
 104   1        for(i = 90; i > 0; i--);
 105   1          */
 106   1      
 107   1          //16M
 108   1        INT8U i,j;
 109   1        for(; t > 0; t--)
 110   1        for(j = 20; j > 0; j--)
 111   1        for(i = 199; i > 0; i--);
 112   1      }
 113          
 114          /*
 115          void DelayMs (INT8U count)
 116          {
C51 COMPILER V9.54   GP_SUB                                                                06/03/2019 10:28:36 PAGE 3   

 117            INT16U i;
 118            
 119          #if (SystemCoreClock == _4M)
 120            do {
 121              
 122              i = 250;
 123              do {
 124                ;
 125              } while (--i != 0);
 126              
 127              ;
 128            } while (--count != 0);
 129          #endif
 130            
 131          #if (SystemCoreClock == _8M)
 132            do {
 133              
 134              i = 488;
 135              do {
 136                ;
 137              } while (--i != 0);
 138              
 139              ;
 140            } while (--count != 0);
 141          #endif
 142            
 143          #if (SystemCoreClock == _12M)
 144            do {
 145              
 146              i = 560;
 147              do {
 148                NOP;
 149              } while (--i != 0);
 150              
 151              ;
 152            } while (--count != 0);
 153          #endif
 154          }
 155          */
 156          
 157          #endif
 158          
 159          /********************************************************************//**
 160           * @brief:      24HR to 12HR Function subprogram
 161           *              
 162           *
 163           * @param[in]:  NONE
 164           *               
 165           * @return:     12HR
 166           *********************************************************************/
 167          #ifdef _C24HR_TO_12HR
              
              INT8U C24HR_TO_12HR (INT8U hr)
              {
                INT8U val;
                
                if (hr <= 11) {
                  F_AM_PM = _AM;
                  if (hr == 0) {
                    val = 12;
                  } else {
                    val = hr;
C51 COMPILER V9.54   GP_SUB                                                                06/03/2019 10:28:36 PAGE 4   

                  }
                } else {
                  F_AM_PM = _PM;
                  if (hr == 12) {
                    val = hr;
                  } else {
                    val = hr - 12;
                  }
                }
                
                return val;  
              }
              
              #endif
 193          
 194          /********************************************************************//**
 195           * @brief:      C to F Function subprogram
 196           *              
 197           *
 198           * @param[in]:    NONE
 199           *               
 200           * @return:     F
 201           *********************************************************************/
 202          #ifdef _C2F
              
              INT16S C2F (INT16S temp)
              {
                return (temp * 18 + 320);
              }
              
              #endif
 210          
 211          /********************************************************************//**
 212           * @brief:      C to F Function subprogram
 213           *              
 214           *
 215           * @param[in]:    NONE
 216           *               
 217           * @return:     F
 218           *********************************************************************/
 219          #ifdef _F2C
              
              INT16S F2C (INT16S temp)
              {
                return ((temp-320) / 18);
              }
              
              #endif
 227          
 228          /********************************************************************//**
 229           * @brief:      Calculate weekday Function subprogram
 230           *              Weekday={(Year+12)+Day+(Year+12)/4+T[Mtab]-1}Mod7
 231           *              If Month<3 The Year Sub 1
 232           *              
 233           * @param[in]:  Year,Month Offset(Mtab),Day
 234           *              1990<=Year<=2099, 1<=Month<=12, 1<=Day<=31
 235           *               
 236           * @return:     WEEK(0=Sunday,1=Monday,...,6=Saturday)
 237           *********************************************************************/
 238          #ifdef _CALC_WEEK
              
              //week table
C51 COMPILER V9.54   GP_SUB                                                                06/03/2019 10:28:36 PAGE 5   

              CONST INT8U WEEK_TAB_ADDR[13] = {0x00,0x00,0x03,0x02,0x05,0x00,0x03,0x05,0x01,0x04,0x06,0x02,0x04};
              
              //calculate week
              void CALC_WEEK (void)
              {
                INT16U  tmp1,tmp2,tmp3;
                
                tmp1 = DEC2HEX(D_YEAR);
                tmp2 = DEC2HEX(D_MONTH);
                tmp3 = DEC2HEX(D_DAY);
                
                D_WEEK = (tmp1+tmp3+(tmp1/4)+WEEK_TAB_ADDR[tmp2]-1)%7;
              }
              
              #endif
 256          /********************************************************************//**
 257           * @brief:      Pressure HPA->INHG Function subprogram
 258           *              
 259           *
 260           * @param[in]:  NONE
 261           *               
 262           * @return:     DEC[4]
 263           *********************************************************************/
 264          #ifdef _HPA2INHG
              
              INT16U HPA2INHG (INT16U i)
              {
                return (i * 2953 / 1000);
              }
              
              #endif
 272          /********************************************************************//**
 273           * @brief:      HEX TO DEC Function subprogram
 274           *              
 275           *
 276           * @param[in]:  Hp(HEX Point)
 277           *               
 278           * @return:     DEC[4]
 279           *********************************************************************/
 280          #ifdef _HEX2DEC
              
              void HEX2DEC (INT16U Hp)
              {
                INT16U i;
                
                i = Hp;
                DEC[0]  = 0;
                DEC[1]  = 0;
                DEC[2]  = 0;
                DEC[3]  = 0;
                
                while(i >= 1000){
                  i = i - 1000;
                  DEC[3]++;
                }
                
                while(i >= 100){
                  i = i - 100;
                  DEC[2]++;
                }
                
                while(i >= 10){
C51 COMPILER V9.54   GP_SUB                                                                06/03/2019 10:28:36 PAGE 6   

                  i = i - 10;
                  DEC[1]++;
                }
                
                DEC[0] = i;
              }
              
              #endif
 311          
 312          /********************************************************************//**
 313           * @brief:      DEC TO Hex Function subprogram
 314           *              
 315           *
 316           * @param[in]:  HEX
 317           *               
 318           * @return:     HEX
 319           *********************************************************************/
 320          #ifdef _DEC2HEX
              
              INT8U DEC2HEX (INT8U HEX_1)
              {
                INT8U i;
                
                i = HEX_1 & 0xf0;
                i = i>>4;
                
                HEX_1 = HEX_1 & 0x0f;
                
                while (i != 0) {
                  i--;
                  HEX_1 = HEX_1+0x0a;
                }
                
                return HEX_1;
              }
              
              #endif
 340          
 341          
 342          
 343          
 344          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     75    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
