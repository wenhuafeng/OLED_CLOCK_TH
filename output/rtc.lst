C51 COMPILER V9.59.0.0   RTC                                                               05/31/2022 20:33:57 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN .\output\rtc.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE code\rtc.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\output\rtc.lst) OBJECT(.\output\rtc.obj)

line level    source

   1          #include "rtc.h"
   2          #include "func_def.h"
   3          
   4          static union TimeFlag g_timeFlag;
   5          static struct TimeType g_time;
   6          
   7          void SetTimeFlag(uint8_t flags)
   8          {
   9   1          union TimeFlag *timeFlag = &g_timeFlag;
  10   1      
  11   1          timeFlag->flags |= flags;
  12   1      }
  13          
  14          BOOLEAN GetTimeFlag(uint8_t flags)
  15          {
  16   1          BOOLEAN ret;
  17   1          union TimeFlag *timeFlag = &g_timeFlag;
  18   1      
  19   1          if ((timeFlag->flags & flags) == 0) {
  20   2              ret = false;
  21   2          } else {
  22   2              ret = true;
  23   2          }
  24   1      
  25   1          return ret;
  26   1      }
  27          
  28          void ToggleTimeFlag(uint8_t flags)
  29          {
  30   1          union TimeFlag *timeFlag = &g_timeFlag;
  31   1      
  32   1          timeFlag->flags ^= flags;
  33   1      }
  34          
  35          void ResetTimeFlag(uint8_t flags)
  36          {
  37   1          union TimeFlag *timeFlag = &g_timeFlag;
  38   1      
  39   1          timeFlag->flags &= ~flags;
  40   1      }
  41          
  42          static uint8_t GetMaxDay(uint16_t year, uint8_t month)
  43          {
  44   1          uint8_t day;
  45   1          uint8_t daysTable[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
  46   1      
  47   1          if (month == 2) {
  48   2              if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
  49   3                  day = 29;
  50   3              } else {
  51   3                  day = 28;
  52   3              }
  53   2          } else {
  54   2              day = daysTable[month];
C51 COMPILER V9.59.0.0   RTC                                                               05/31/2022 20:33:57 PAGE 2   

  55   2          }
  56   1      
  57   1          return day;
  58   1      }
  59          
  60          struct TimeType *GetTime(void)
  61          {
  62   1          return &g_time;
  63   1      }
  64          
  65          void TimeInit(void)
  66          {
  67   1          struct TimeType *time = &g_time;
  68   1      
  69   1          time->year  = 2022;
  70   1          time->month = 1;
  71   1          time->day   = 1;
  72   1          time->hour = 8;
  73   1          time->min  = 0;
  74   1          time->sec  = 0;
  75   1          CalculateWeek();
  76   1      }
  77          
  78          BOOLEAN ClockRun(void)
  79          {
  80   1          struct TimeType *time = &g_time;
  81   1      
  82   1          time->sec++;
  83   1          if (time->sec < 60) {
  84   2              return false;
  85   2          }
  86   1      
  87   1          time->sec = 0;
  88   1          time->min++;
  89   1          if (time->min < 60) {
  90   2              return false;
  91   2          }
  92   1      
  93   1          time->min = 0;
  94   1          time->hour++;
  95   1          if (time->hour < 24) {
  96   2              return false;
  97   2          }
  98   1      
  99   1          time->hour = 0;
 100   1          time->day++;
 101   1          if (time->day <= GetMaxDay(time->year, time->month)) {
 102   2              goto calc_week;
 103   2          }
 104   1      
 105   1          time->day = 1;
 106   1          time->month++;
 107   1          if (time->month < 13) {
 108   2              goto calc_week;
 109   2          }
 110   1      
 111   1          time->month = 1;
 112   1          time->year++;
 113   1      
 114   1      calc_week:
 115   1          CalculateWeek();
 116   1      
C51 COMPILER V9.59.0.0   RTC                                                               05/31/2022 20:33:57 PAGE 3   

 117   1          return true;
 118   1      }
 119          
 120          void CalculateWeek(void)
 121          {
 122   1          int16_t yearTemp = 0;
 123   1          int16_t yearHigh;
 124   1          int16_t yearLow;
 125   1          int8_t monthTemp = 0;
 126   1          int8_t wk;
 127   1          struct TimeType *time = &g_time;
 128   1      
 129   1          if (time->month < 3) {
 130   2              monthTemp = time->month + 12;
 131   2              yearTemp  = time->year - 1;
 132   2          } else {
 133   2              monthTemp = time->month;
 134   2              yearTemp  = time->year;
 135   2          }
 136   1      
 137   1          yearHigh = yearTemp / 100;
 138   1          yearLow  = yearTemp % 100;
 139   1      
 140   1          wk = yearLow + (yearLow / 4) + (yearHigh / 4);
 141   1          wk = wk - (2 * yearHigh) + (26 * (monthTemp + 1) / 10) + time->day - 1;
 142   1          wk = (wk + 140) % 7;
 143   1      
 144   1          time->week = wk;
 145   1      }
 146          
 147          void IncMin(void)
 148          {
 149   1          g_time.sec = 0x00;
 150   1          if (++g_time.min >= 60) {
 151   2              g_time.min = 0;
 152   2          }
 153   1      }
 154          
 155          void DecMin(void)
 156          {
 157   1          g_time.sec = 0x00;
 158   1          if (--g_time.min == 0xff) {
 159   2              g_time.min = 59;
 160   2          }
 161   1      }
 162          
 163          void IncHour(void)
 164          {
 165   1          if (++g_time.hour >= 24) {
 166   2              g_time.hour = 0;
 167   2          }
 168   1      }
 169          
 170          void DecHour(void)
 171          {
 172   1          if (--g_time.hour == 0xff) {
 173   2              g_time.hour = 23;
 174   2          }
 175   1      }
 176          
 177          void IncDay(void)
 178          {
C51 COMPILER V9.59.0.0   RTC                                                               05/31/2022 20:33:57 PAGE 4   

 179   1          if (++g_time.day > GetMaxDay(g_time.year, g_time.month)) {
 180   2              g_time.day = 1;
 181   2          }
 182   1      }
 183          
 184          void DecDay(void)
 185          {
 186   1          if (--g_time.day == 0) {
 187   2              g_time.day = GetMaxDay(g_time.year, g_time.month);
 188   2          }
 189   1      }
 190          
 191          void IncMonth(void)
 192          {
 193   1          uint8_t MaxDay;
 194   1      
 195   1          if (++g_time.month >= 13) {
 196   2              g_time.month = 1;
 197   2          }
 198   1      
 199   1          //update Max day
 200   1          MaxDay = GetMaxDay(g_time.year, g_time.month);
 201   1          if (g_time.day >= MaxDay) {
 202   2              g_time.day = MaxDay;
 203   2          }
 204   1      }
 205          
 206          void DecMonth(void)
 207          {
 208   1          uint8_t MaxDay;
 209   1      
 210   1          if (--g_time.month == 0) {
 211   2              g_time.month = 12;
 212   2          }
 213   1      
 214   1          //update Max day
 215   1          MaxDay = GetMaxDay(g_time.year, g_time.month);
 216   1          if (g_time.day >= MaxDay) {
 217   2              g_time.day = MaxDay;
 218   2          }
 219   1      }
 220          
 221          void IncYear(void)
 222          {
 223   1          uint8_t MaxDay;
 224   1      
 225   1          if (++g_time.year > 2099) {
 226   2              g_time.year = 2000;
 227   2          }
 228   1      
 229   1          //update Max day
 230   1          MaxDay = GetMaxDay(g_time.year, g_time.month);
 231   1          if (g_time.day >= MaxDay) {
 232   2              g_time.day = MaxDay;
 233   2          }
 234   1      }
 235          
 236          void DecYear(void)
 237          {
 238   1          uint8_t MaxDay;
 239   1      
 240   1          if (--g_time.year == 1999) {
C51 COMPILER V9.59.0.0   RTC                                                               05/31/2022 20:33:57 PAGE 5   

 241   2              g_time.year = 2099;
 242   2          }
 243   1      
 244   1          //update Max day
 245   1          MaxDay = GetMaxDay(g_time.year, g_time.month);
 246   1          if (g_time.day >= MaxDay) {
 247   2              g_time.day = MaxDay;
 248   2          }
 249   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    882    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
