C51 COMPILER V9.54   MAIN                                                                  06/03/2019 10:28:35 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\output\main.lst) TABS(2) OBJECT(.\output\main.obj)

line level    source

   1          //======================================================
   2          // Main program routine
   3          // - Device name  : MC96F6332
   4          // - Package type : 32QFP
   5          //======================================================
   6          // For XDATA variable : V1.041.00 ~
   7          //#define    MAIN  1
   8          
   9          // Generated    : Fri, Jul 07, 2017 (14:07:54)
  10          #include "includes.h"
  11          
  12          u8 Ctr8S;
  13          #define _10MIN_TIME_    (10*60*2)
  14          u16 StopModeCtr;
  15          void AllCtrRun(void);
  16          
  17          
  18          void main()
  19          {
  20   1        cli();            // disable INT. during peripheral setting
  21   1        port_init();      // initialize ports
  22   1        clock_init();     // initialize operation clock
  23   1        LCD_init();       // initialize LCD
  24   1          //Timer1_init();
  25   1        WT_init();        // initialize Watch timer
  26   1          ExINT_init();
  27   1        sei();            // enable INT.
  28   1        
  29   1        // TODO: add your main code here
  30   1          DelayMs(1000);
  31   1          DelayUs(1000);
  32   1        TimeInit();
  33   1          OLED_Init();
  34   1          measure_si7021(TEMP_HOLD_MASTER, (union16 *)(&gv_si7021_value.temp));
  35   1          DelayMs(1);
  36   1          measure_si7021(HUMI_HOLD_MASTER, (union16 *)(&gv_si7021_value.humi));
  37   1          
  38   1          StopModeCtr = _10MIN_TIME_;
  39   1          
  40   1          do
  41   1        {
  42   2          //
  43   2              if (F_500MS || F_Key) {
  44   3            if (F_500MS) {
  45   4              F_500MS = 0;
  46   4              HoldKeyCtr++;
  47   4              AllCtrRun();
  48   4              StopMode();
*** WARNING C206 IN LINE 48 OF code\main.c: 'StopMode': missing function-prototype
  49   4            }
  50   3            
  51   3            //Key function
  52   3                  if (F_Key) {
  53   4              F_Key = 0;
C51 COMPILER V9.54   MAIN                                                                  06/03/2019 10:28:35 PAGE 2   

  54   4              ScanKey();
  55   4              if (F_PushKey) {
  56   5                if ((Key < _MAX_KEY_) && (Key != _NO_KEY_)) {
  57   6                  PushKeyFunc();
  58   6                              StopModeCtr = _10MIN_TIME_;
  59   6                }
  60   5              } else {
  61   5                if ((OldKey < _MAX_KEY_) && (OldKey != _NO_KEY_)) {
  62   6                  ReleKeyFunc();
  63   6                              StopModeCtr = _10MIN_TIME_;
  64   6                }
  65   5              }
  66   4                  }
  67   3                  Display();
  68   3              }
  69   2              if (flag_1000ms_on) {
  70   3                  flag_1000ms_on = 0;
  71   3                  Time_Deal();
  72   3                  
  73   3                  Ctr8S++;
  74   3                  if (Ctr8S > 10) {
  75   4                      Ctr8S = 0x00;
  76   4                      if (SetModeCtr == 0x00) {
  77   5                          measure_si7021(TEMP_HOLD_MASTER, (union16 *)(&gv_si7021_value.temp));
  78   5                          DelayMs(1);
  79   5                          measure_si7021(HUMI_HOLD_MASTER, (union16 *)(&gv_si7021_value.humi));
  80   5                      }
  81   4            }
  82   3              }
  83   2      
  84   2        }while(1);
  85   1      }
  86          
  87          
  88          void AllCtrRun(void)
  89          {
  90   1        if (SetModeCtr) {
  91   2              SetModeCtr--;
  92   2          if (SetModeCtr == 0x00) {
  93   3                  SetItem = _NORMAL_MODE_;
  94   3          }
  95   2        }
  96   1      
  97   1        DispChange++;
  98   1        if (DispChange > 4) {
  99   2          DispChange = 0x00;
 100   2          F_temp = ~F_temp;
 101   2        }
 102   1          
 103   1          if (SetModeCtr) {
 104   2              F_temp = 0;
 105   2          }
 106   1          
 107   1          if (StopModeCtr) {
 108   2              StopModeCtr--;
 109   2          }
 110   1      }
 111          
 112          void StopMode(void)
 113          {
*** ERROR C231 IN LINE 113 OF code\main.c: 'StopMode': redefinition
 114   1          if (StopModeCtr) return;
C51 COMPILER V9.54   MAIN                                                                  06/03/2019 10:28:35 PAGE 3   

 115   1          
 116   1          //OLED_OFF();
 117   1          
 118   1          
 119   1          StopModeCtr = _10MIN_TIME_;
 120   1      }
*** ERROR C231 IN LINE 120 OF code\main.c: 'StopMode': redefinition
 121          
 122          
 123          //======================================================
 124          // interrupt routines
 125          //======================================================
 126          
 127          void INT_Ext0_7() interrupt 5
 128          {
 129   1        // External interrupt 0 ~ 7
 130   1        // TODO: add your code here
 131   1          F_Key = 1;
 132   1          Clr_Key_Int_Flag();
 133   1      }
 134          
 135          void INT_Timer1() interrupt 14
 136          {
 137   1        // Timer1 interrupt
 138   1        // TODO: add your code here
 139   1          F_Key = 1;
 140   1      }
 141          
 142          void INT_WT(void) interrupt 20
 143          {
 144   1        // Watch timer interrupt
 145   1        // TODO: add your code here
 146   1          static INT8U i;
 147   1        
 148   1          i++;
 149   1          F_500MS = 1;
 150   1        F_500MS_1 = 1;
 151   1        F_SET_COL = ~F_SET_COL;
 152   1      
 153   1        if (i & 0x01) {
 154   2          flag_1000ms_on = 1;   
 155   2        }
 156   1      }
 157          
 158          //======================================================
 159          // peripheral setting routines
 160          //======================================================
 161          
 162          void ExINT_init()
 163          {
 164   1        // initialize external interrupt
 165   1        EIPOL0H = 0x00;   // edge : external INT.7~4
 166   1        EIPOL0L = 0xFC;   // edge : external INT.3~0
 167   1        EIPOL1 = 0x55;    // edge : external INT.12, 11, 10, 8
 168   1        IE |= 0x20;       // Enable Ext.INT.0~7
 169   1      }
 170          
 171          void LCD_init()
 172          {
 173   1        // initialize LCD
 174   1        // Frame freq. = 16.000000Hz
 175   1        LCDCRH = 0x00;    // LCD control High
C51 COMPILER V9.54   MAIN                                                                  06/03/2019 10:28:35 PAGE 4   

 176   1        LCDCRL = 0x00;    // LCD control Low
 177   1        LCDCCR = 0x00;    // LCD contrast
 178   1      }
 179          
 180          void Timer1_init()
 181          {
 182   1        // initialize Timer1
 183   1        // 16bit timer, period = 125.000000mS
 184   1        T1CRH = 0x00;     // timer setting High
 185   1        T1CRL = 0x40;     // timer setting Low
 186   1        T1ADRH = 0x7A;    // period count High
 187   1        T1ADRL = 0x11;    // period count Low
 188   1        IE2 |= 0x04;      // Enable Timer1 interrupt
 189   1        T1CRH |= 0x80;    // enable counter
 190   1      }
 191          
 192          void WT_init()
 193          {
 194   1        // initialize Watch timer
 195   1        WTCR = 0x88;      // setting
 196   1        WTDR = 0x01;      // set duty
 197   1        WTDR = 0x81;      // clear WT
 198   1        IE3 |= 0x04;      // Enable WT interrupt
 199   1      }
 200          
 201          void clock_init()
 202          {
 203   1        // internal RC clock (16.000000MHz)
 204   1        OSCCR = 0x28|0x01;     // Set Int. OSC
 205   1        SCCR = 0x00;      // Use Int. OSC
 206   1      }
 207          
 208          void port_init()
 209          {
 210   1        // initialize ports
 211   1        //   1 : SXIN     out 
 212   1        //   2 : SXOUT    out 
 213   1        //   3 : RESETB   in  key reset
 214   1        //   4 : P40      out 
 215   1        //   5 : P41      out 
 216   1        //   6 : P42      out 
 217   1        //   7 : P33      out 
 218   1        //   8 : P32      out 
 219   1        //   9 : P31      out 
 220   1        //  10 : P30      out 
 221   1        //  11 : P27      out 
 222   1        //  12 : P26      out 
 223   1        //  13 : P22      out 
 224   1        //  14 : P21      out 
 225   1        //  15 : P20      out 
 226   1        //  16 : P10      out 
 227   1        //  17 : P11      out 
 228   1        //  18 : P12      out 
 229   1        //  19 : P13      out 
 230   1        //  20 : P07      out 
 231   1        //  21 : P06      out 
 232   1        //  22 : P05      in 
 233   1        //  23 : P04      in  
 234   1        //  24 : P03      in  
 235   1        //  25 : P02      out 
 236   1        //  26 : P01      out 
 237   1        //  27 : P00      out 
C51 COMPILER V9.54   MAIN                                                                  06/03/2019 10:28:35 PAGE 5   

 238   1        //  30 : P50      out 
 239   1        //  31 : P51      out 
 240   1        //  32 : P52      out 
 241   1        P0IO = 0xC7;      // direction
 242   1        P0PU = 0x38;      // pullup
 243   1        P0OD = 0x00;      // open drain
 244   1        P0DB = 0x00;      // bit7~6(debounce clock), bit5~0=P07~02 debounce
 245   1        P0   = 0x00;      // port initial value
 246   1      
 247   1        P1IO = 0xFF;      // direction
 248   1        P1PU = 0x00;      // pullup
 249   1        P1OD = 0x00;      // open drain
 250   1        P15DB = 0x00;     // debounce : P54, 52, 17, 16, 12, 11
 251   1        P1   = 0x00;      // port initial value
 252   1      
 253   1        P2IO = 0xFF;      // direction
 254   1        P2PU = 0x00;      // pullup
 255   1        P2OD = 0x00;      // open drain
 256   1        P2   = 0x00;      // port initial value
 257   1      
 258   1        P3IO = 0xFF;      // direction
 259   1        P3PU = 0x00;      // pullup
 260   1        P3   = 0x00;      // port initial value
 261   1      
 262   1        P4IO = 0xFF;      // direction
 263   1        P4PU = 0x00;      // pullup
 264   1        P4OD = 0x00;      // open drain
 265   1        P4   = 0x00;      // port initial value
 266   1      
 267   1        P5IO = 0xDF;      // direction
 268   1        P5PU = 0x20;      // pullup
 269   1        P5   = 0x00;      // port initial value
 270   1      
 271   1        // Set port functions
 272   1        P0FSRH = 0x00;    // P0 selection High
 273   1        P0FSRL = 0x00;    // P0 selection Low
 274   1        P1FSRH = 0x00;    // P1 selection High
 275   1        P1FSRL = 0x00;    // P1 selection Low
 276   1        P2FSRH = 0x00;    // P2 selection High
 277   1        P2FSRL = 0x00;    // P2 selection Low
 278   1        P3FSR = 0x00;     // P3 selection
 279   1        P4FSR = 0x00;     // P4 selection
 280   1        P5FSR = 0x28;     // P5 selection
 281   1      }
 282          

C51 COMPILATION COMPLETE.  1 WARNING(S),  2 ERROR(S)
