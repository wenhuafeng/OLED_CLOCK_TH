C51 COMPILER V9.59.0.0   MAIN_SUB                                                          05/31/2022 20:33:57 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN_SUB
OBJECT MODULE PLACED IN .\output\main_sub.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE code\main_sub.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\output\main_sub.lst) OBJECT(.\output\main_sub.obj)

line level    source

   1          #include "main_sub.h"
   2          #include "MC96F6432.h"
   3          #include "func_def.h"
   4          #include "key_func.h"
   5          #include "rtc.h"
   6          
   7          void ExINT_init(void)
   8          {
   9   1          // initialize external interrupt
  10   1          EIPOL0H = 0x00; // edge : external INT.7~4
  11   1          EIPOL0L = 0xFC; // edge : external INT.3~0
  12   1          EIPOL1  = 0x55; // edge : external INT.12, 11, 10, 8
  13   1          IE |= 0x20;     // Enable Ext.INT.0~7
  14   1      }
  15          
  16          void LCD_init(void)
  17          {
  18   1          // initialize LCD
  19   1          // Frame freq. = 16.000000Hz
  20   1          LCDCRH = 0x00; // LCD control High
  21   1          LCDCRL = 0x00; // LCD control Low
  22   1          LCDCCR = 0x00; // LCD contrast
  23   1      }
  24          
  25          void Timer1_init(void)
  26          {
  27   1          // initialize Timer1
  28   1          // 16bit timer, period = 125.000000mS
  29   1          T1CRH  = 0x00; // timer setting High
  30   1          T1CRL  = 0x40; // timer setting Low
  31   1          T1ADRH = 0x7A; // period count High
  32   1          T1ADRL = 0x11; // period count Low
  33   1          IE2 |= 0x04;   // Enable Timer1 interrupt
  34   1          T1CRH |= 0x80; // enable counter
  35   1      }
  36          
  37          void WT_init(void)
  38          {
  39   1          // initialize Watch timer
  40   1          WTCR = 0x88; // setting
  41   1          WTDR = 0x01; // set duty
  42   1          WTDR = 0x81; // clear WT
  43   1          IE3 |= 0x04; // Enable WT interrupt
  44   1      }
  45          
  46          void clock_init(void)
  47          {
  48   1          // internal RC clock (16.000000MHz)
  49   1          OSCCR = 0x28 | 0x01; // Set Int. OSC
  50   1          SCCR  = 0x00;        // Use Int. OSC
  51   1      }
  52          
  53          void port_init(void)
  54          {
C51 COMPILER V9.59.0.0   MAIN_SUB                                                          05/31/2022 20:33:57 PAGE 2   

  55   1          // initialize ports
  56   1          //   1 : SXIN     out
  57   1          //   2 : SXOUT    out
  58   1          //   3 : RESETB   in  key reset
  59   1          //   4 : P40      out
  60   1          //   5 : P41      out
  61   1          //   6 : P42      out
  62   1          //   7 : P33      out
  63   1          //   8 : P32      out
  64   1          //   9 : P31      out
  65   1          //  10 : P30      out
  66   1          //  11 : P27      out
  67   1          //  12 : P26      out
  68   1          //  13 : P22      out
  69   1          //  14 : P21      out
  70   1          //  15 : P20      out
  71   1          //  16 : P10      out
  72   1          //  17 : P11      out
  73   1          //  18 : P12      out
  74   1          //  19 : P13      out
  75   1          //  20 : P07      out
  76   1          //  21 : P06      out
  77   1          //  22 : P05      in
  78   1          //  23 : P04      in
  79   1          //  24 : P03      in
  80   1          //  25 : P02      out
  81   1          //  26 : P01      out
  82   1          //  27 : P00      out
  83   1          //  30 : P50      out
  84   1          //  31 : P51      out
  85   1          //  32 : P52      out
  86   1          P0IO = 0xC7; // direction
  87   1          P0PU = 0x38; // pullup
  88   1          P0OD = 0x00; // open drain
  89   1          P0DB = 0x00; // bit7~6(debounce clock), bit5~0=P07~02 debounce
  90   1          P0   = 0x00; // port initial value
  91   1      
  92   1          P1IO  = 0xFF; // direction
  93   1          P1PU  = 0x00; // pullup
  94   1          P1OD  = 0x00; // open drain
  95   1          P15DB = 0x00; // debounce : P54, 52, 17, 16, 12, 11
  96   1          P1    = 0x00; // port initial value
  97   1      
  98   1          P2IO = 0xFF; // direction
  99   1          P2PU = 0x00; // pullup
 100   1          P2OD = 0x00; // open drain
 101   1          P2   = 0x00; // port initial value
 102   1      
 103   1          P3IO = 0xFF; // direction
 104   1          P3PU = 0x00; // pullup
 105   1          P3   = 0x00; // port initial value
 106   1      
 107   1          P4IO = 0xFF; // direction
 108   1          P4PU = 0x00; // pullup
 109   1          P4OD = 0x00; // open drain
 110   1          P4   = 0x00; // port initial value
 111   1      
 112   1          P5IO = 0xDF; // direction
 113   1          P5PU = 0x20; // pullup
 114   1          P5   = 0x00; // port initial value
 115   1      
 116   1          // Set port functions
C51 COMPILER V9.59.0.0   MAIN_SUB                                                          05/31/2022 20:33:57 PAGE 3   

 117   1          P0FSRH = 0x00; // P0 selection High
 118   1          P0FSRL = 0x00; // P0 selection Low
 119   1          P1FSRH = 0x00; // P1 selection High
 120   1          P1FSRL = 0x00; // P1 selection Low
 121   1          P2FSRH = 0x00; // P2 selection High
 122   1          P2FSRL = 0x00; // P2 selection Low
 123   1          P3FSR  = 0x00; // P3 selection
 124   1          P4FSR  = 0x00; // P4 selection
 125   1          P5FSR  = 0x28; // P5 selection
 126   1      }
 127          
 128          void INT_Ext0_7() interrupt 5
 129          {
 130   1          // External interrupt 0 ~ 7
 131   1          // TODO: add your code here
 132   1          SetKeyFlag(KEY_FLAG);
 133   1          CLR_KEY_INT_FLAG();
 134   1      }
 135          
 136          void INT_Timer1() interrupt 14
 137          {
 138   1          // Timer1 interrupt
 139   1          // TODO: add your code here
 140   1          SetKeyFlag(KEY_FLAG);
 141   1      }
 142          
 143          void INT_WT(void) interrupt 20
 144          {
 145   1          // Watch timer interrupt
 146   1          // TODO: add your code here
 147   1          static uint8_t count = 0;
 148   1      
 149   1          count++;
 150   1          SetTimeFlag(SET_500MS_FLAG | SET_COL_FLAG);
 151   1      
 152   1          if (count & 0x01) {
 153   2              SetTimeFlag(SET_1000MS_FLAG);
 154   2          }
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
