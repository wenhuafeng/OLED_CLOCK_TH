C51 COMPILER V9.54   KEY_FUNC                                                              06/03/2019 10:28:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEY_FUNC
OBJECT MODULE PLACED IN .\output\Key_Func.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\Key_Func.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\output\Key_Func.lst) TABS(2) OBJECT(.\output\Key_Func.obj)

line level    source

   1          
   2          //=======================================================================================
   3          /*=======================================================================================
   4            Description : Key operation
   5            Version     : V1.00
   6            Author      : 
   7          //=======================================================================================
   8          //======================================================================================*/
   9          
  10          
  11          #ifndef  OS_MASTER_FILE
  12          #define  OS_GLOBALS
  13          #include "includes.h"
  14          #endif
  15          
  16          
  17          void ScanKey(void)
  18          {
  19   1        INT8U i,j;
  20   1      
  21   1          Key  = _NO_KEY_;
  22   1      
  23   1          i = (KeyPort & _ALL_KEY_MASK_);
  24   1        if (i == _ALL_KEY_MASK_) {
  25   2          F_PushKey = 0;
  26   2          F_NewKey  = 0;
  27   2          F_HoldKey  = 0;
  28   2          F_TwoKey  = 0;
  29   2          //TEST
  30   2          //P10 = 0;
  31   2          goto normal_quit_scan_key;
  32   2        }
  33   1      
  34   1          DelayMs(2);
  35   1      
  36   1        j = (KeyPort & _ALL_KEY_MASK_);
  37   1        if ((j == _ALL_KEY_MASK_) || (i != j)) {
  38   2          //F_PushKey = 0;
  39   2          F_NewKey  = 0;
  40   2          F_HoldKey  = 0;
  41   2          F_TwoKey  = 0;
  42   2          goto normal_quit_scan_key;
  43   2        }
  44   1      
  45   1          Dis_Key_Int();
  46   1          i = (KeyPort & _ALL_KEY_MASK_);
  47   1        switch (i)
  48   1        {
  49   2          case _01_KEY_MASK_:
  50   2            Key = _01_KEY_;
  51   2            break;    
  52   2          case _02_KEY_MASK_:
  53   2            Key = _02_KEY_;
  54   2            break;      
C51 COMPILER V9.54   KEY_FUNC                                                              06/03/2019 10:28:36 PAGE 2   

  55   2          case _03_KEY_MASK_:
  56   2            Key = _03_KEY_;
  57   2            break;      
  58   2          default:
  59   2            break;
  60   2        }
  61   1      
  62   1        if (Key == _NO_KEY_) {
  63   2          Key      = _NO_KEY_;
  64   2          //F_PushKey = 0;
  65   2          F_NewKey  = 0;
  66   2          F_HoldKey  = 0;
  67   2          F_TwoKey  = 0;
  68   2              goto normal_quit_scan_key;
  69   2        } else {
  70   2          if (F_PushKey == 0) {
  71   3            OldKey = Key;
  72   3            F_NewKey = 1;
  73   3            F_PushKey = 1;
  74   3            //TEST
  75   3            //P10 = 1;
  76   3          }
  77   2        }
  78   1      
  79   1      normal_quit_scan_key:
  80   1        _nop_();
  81   1          Clr_Key_Int_Flag();
  82   1        En_Key_Int();
  83   1      }
  84          
  85          /********************************************************************//**
  86           * @brief:      KEY HOLD COM Function subprogram
  87           *              
  88           *
  89           * @param[in]:  NONE
  90           *               
  91           * @return:     NONE
  92           *********************************************************************/
  93          BOOLEAN HoldKeyCom(void)
  94          {
  95   1        if (F_NewKey == 1) {
  96   2          HoldKeyCtr = 0;
  97   2        } else {
  98   2          if (F_HoldKey == 0) {
  99   3            if (HoldKeyCtr == _HOLD_TIMER_KEY_) {
 100   4              F_HoldKey = 1;
 101   4              return 1;
 102   4            }
 103   3          }
 104   2        }
 105   1        
 106   1        return 0;
 107   1      }
 108          
 109          /********************************************************************//**
 110           * @brief:      KEY SETTING COM Function subprogram
 111           *              
 112           *
 113           * @param[in]:  NONE
 114           *               
 115           * @return:     NONE
 116           *********************************************************************/
C51 COMPILER V9.54   KEY_FUNC                                                              06/03/2019 10:28:36 PAGE 3   

 117          BOOLEAN SettingCom(void)
 118          {
 119   1        if (F_NewKey == 1) {
 120   2          HoldKeyCtr = 0;
 121   2          //KEY_TONE();
 122   2          return 1;
 123   2        } else {
 124   2          if (F_HoldKey == 0) {
 125   3            if (HoldKeyCtr == _HOLD_TIMER_KEY_) {
 126   4              F_HoldKey = 1;
 127   4              //Timer1_init();
 128   4              return 1;
 129   4            }
 130   3          } else {
 131   3            return 1;
 132   3          }
 133   2        }
 134   1        
 135   1        return 0;
 136   1      }
 137          
 138          /********************************************************************//**
 139           * @brief:      
 140           *              
 141           *
 142           * @param[in]:    NONE
 143           *               
 144           * @return:     NONE
 145           *********************************************************************/
 146          void PushKeyFunc(void)
 147          {
 148   1          if (F_NewKey || F_HoldKey) {
 149   2              if (SetItem != _NORMAL_MODE_) {
 150   3                  SetModeCtr = _SET_MODE_TIME_;
 151   3              }
 152   2        }
 153   1      
 154   1          switch (Key)
 155   1        {
 156   2              case _UP_KEY_:
 157   2            if (SetItem != _NORMAL_MODE_) {
 158   3              if (SettingCom() == 1) {
 159   4                if (F_NewKey == 1) {
 160   5                  switch (SetItem)
 161   5                  {
 162   6                    case _CLOCK_SET_HR_:
 163   6                      F_HR = ~F_HR;
 164   6                      break;
 165   6                                  default:
 166   6                      break;
 167   6                  }
 168   5                }
 169   4                
 170   4                switch (SetItem)
 171   4                {
 172   5                  case _CLOCK_SET_HOUR_:
 173   5                    HOUR_INC();
 174   5                    break;
 175   5                  case _CLOCK_SET_MIN_:
 176   5                    MIN_INC();
 177   5                    break;
 178   5                  case _CLOCK_SET_YEAR_:
C51 COMPILER V9.54   KEY_FUNC                                                              06/03/2019 10:28:36 PAGE 4   

 179   5                    YEAR_INC();
 180   5                    break;
 181   5                  case _CLOCK_SET_MONTH_:
 182   5                    MONTH_INC();
 183   5                    break;
 184   5                  case _CLOCK_SET_DAY_:
 185   5                    DAY_INC();
 186   5                    break;
 187   5                  default:
 188   5                    break;
 189   5                }
 190   4                F_SET_COL = 1;
 191   4                          Week_Deal(TIME.year, TIME.month, TIME.day);
 192   4              }
 193   3            }
 194   2            break;
 195   2          case _DOWN_KEY_:
 196   2                  if (SetItem != _NORMAL_MODE_) {
 197   3              if (SettingCom() == 1) {
 198   4                if (F_NewKey == 1) {
 199   5                  switch (SetItem)
 200   5                  {
 201   6                    case _CLOCK_SET_HR_:
 202   6                      F_HR = ~F_HR;
 203   6                      break;
 204   6                                  default:
 205   6                      break;
 206   6                  }
 207   5                }
 208   4                
 209   4                switch (SetItem)
 210   4                {
 211   5                  case _CLOCK_SET_HOUR_:
 212   5                    HOUR_DEC();
 213   5                    break;
 214   5                  case _CLOCK_SET_MIN_:
 215   5                    MIN_DEC();
 216   5                    break;
 217   5                  case _CLOCK_SET_YEAR_:
 218   5                    YEAR_DEC();
 219   5                    break;
 220   5                  case _CLOCK_SET_MONTH_:
 221   5                    MONTH_DEC();
 222   5                    break;
 223   5                  case _CLOCK_SET_DAY_:
 224   5                    DAY_DEC();
 225   5                    break;
 226   5                  default:
 227   5                    break;
 228   5                }
 229   4                F_SET_COL = 1;
 230   4                          Week_Deal(TIME.year, TIME.month, TIME.day);
 231   4              }
 232   3            }
 233   2            break;
 234   2              case _MODE_KEY_:
 235   2                  if (HoldKeyCom()) {
 236   3                      
 237   3            }
 238   2            break;
 239   2              default:
 240   2            break;
C51 COMPILER V9.54   KEY_FUNC                                                              06/03/2019 10:28:36 PAGE 5   

 241   2        }
 242   1      
 243   1        F_NewKey = 0;
 244   1      }
 245          /********************************************************************//**
 246           * @brief:      
 247           *              
 248           *
 249           * @param[in]:    NONE
 250           *               
 251           * @return:     NONE
 252           *********************************************************************/
 253          void ReleKeyFunc(void)
 254          {
 255   1        INT8U tmp;
 256   1        
 257   1        tmp = OldKey;
 258   1        OldKey = 0x00;
 259   1        
 260   1        switch (tmp)
 261   1        {
 262   2              case _UP_KEY_:
 263   2            break;
 264   2          case _DOWN_KEY_:
 265   2            break;
 266   2              case _MODE_KEY_:
 267   2                  //set clock.
 268   2                      if (SetItem != _NORMAL_MODE_) {
 269   3                if ((SetItem & _CLOCK_SET_) != _CLOCK_SET_) {
 270   4                              SetItem = _NORMAL_MODE_;
 271   4                          } else {
 272   4                              SetModeCtr = _SET_MODE_TIME_;
 273   4                              SetItem++;
 274   4                  if (SetItem > _CLOCK_SET_DAY_) {
 275   5                                  SetItem = _NORMAL_MODE_;
 276   5                                  SetModeCtr = 0x00;
 277   5                  }
 278   4                }
 279   3              } else {
 280   3                          SetItem = _CLOCK_SET_HOUR_;
 281   3                          SetModeCtr = _SET_MODE_TIME_;
 282   3                          Timer1_init();
 283   3              }
 284   2                      
 285   2            break;
 286   2              default:
 287   2            break;
 288   2        }
 289   1      }
 290          
 291          /********************************************************************//**
 292           * @brief:      FGFFGFG 
 293           *              
 294           * @param[in]:  NONE
 295           *               
 296           * @return:     NONE
 297           *********************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    383    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   KEY_FUNC                                                              06/03/2019 10:28:36 PAGE 6   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
